cmake_minimum_required(VERSION 3.2)
project( Boids )

include_directories(${PROJECT_SOURCE_DIR}/include/)
include_directories(${PROJECT_SOURCE_DIR}/src/)
include_directories(${PROJECT_SOURCE_DIR}/)
include_directories(${PROJECT_SOURCE_DIR}/SFML-2.5.1-windows-vc15-32-bit/SFML-2.5.1/include/)
link_directories(${PROJECT_SOURCE_DIR}/SFML-2.5.1-windows-vc15-32-bit/SFML-2.5.1/lib/)
link_directories(${PROJECT_SOURCE_DIR}/SFML-2.5.1-windows-vc15-32-bit/SFML-2.5.1/bin/)
# D:\Projects\C++\Simulations\Boids_Refactor/SFML-2.5.1-windows-vc15-32-bit/SFML-2.5.1
add_executable(${PROJECT_NAME} src/main.cpp src/boid.cpp src/fps.cpp src/ray.cpp src/rest.cpp src/slider.cpp src/wall.cpp src/info.cpp src/showable.cpp src/segment.cpp)

# target_link_libraries(${PROJECT_NAME} sfml-graphics-2.dll sfml-system-2.dll sfml-window-2.dll)
if(CMAKE_BUILD_TYPE MATCHES Debug)
target_link_libraries(${PROJECT_NAME} sfml-graphics-d sfml-window-d sfml-system-d)
else()
target_link_libraries(${PROJECT_NAME} sfml-graphics sfml-window sfml-system)
endif()
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /STACK:10000000")
# target_link_libraries(${PROJECT_NAME} "-Wl,--stack,10000000")
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 11)
